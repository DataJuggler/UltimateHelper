<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
	  <TargetFramework>net6.0</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Company>Data Juggler</Company>
    <Authors>Data Juggler</Authors>
    <Description>DataJuggler.UltimateHelper is a collection of C# classes to simplify many things.

This is a port of DataJuggler.UltimateHelper.Net that was ported to
DataJuggler.UltimateHelper for .Net Core. To be consistent with Microsoft
I am dropping Core from all my packages.
</Description>
    <Copyright>Data Juggler 2010 - 2022</Copyright>
    <Version>6.0.4</Version>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageProjectUrl>https://github.com/DataJuggler/DataJuggler.UltimateHelper</PackageProjectUrl>
    <RepositoryUrl>https://github.com/DataJuggler/DataJuggler.UltimateHelper.git</RepositoryUrl>
    <RepositoryType>Git Hub</RepositoryType>
    <PackageTags>C# Helper Classes</PackageTags>
    <PackageReleaseNotes>
		5.3.2022
		Version 6.0.4: I added a couple of overrides for IsNull and Exists methods for NullHelper.cs
		
		Version 6.0.0: This version is for 6.0.
		
		Version 1.7.1: I updated Nuget Packages for this release, and System.Configuration was updated recently, so I
		updated.
		
		Version 1.7.0: I updated the package to multi-target .Net5.0 and .Net6.0
		
		Version 1.6.9: Boolean Helper Upgrade described below had some flaws. Hopefully fixed now.

Version 1.6.8 - After 11 years, BooleanHelper got an upgrade.

Version 1.6.7 - I added a couple of read only properties for IsComment, IsPartialComment, PartialCommentText, PartialCommentCode.

Version 1.6.6 - I added a GetWordsAsStrings, because sometimes you just need a list of strings.

Version 1.6.5 - After years of writing this, I found a safer way of getting the FileNameWithoutExtension. My previous method failed if a fileName passed in doesn't have an extension.

Version 1.6.4 - I added a new method FileHelper.Exists. System.IO.File.Exists will return true if you pass in an empty string. My version will return true only if the string exists and the File exists on disk.

Version 1.6.3 - I updated FileHelper.CreateFileNameWithPartialGuid method to have a couple of optional
parameters to set whether includeExtension is true or fileNameOnly.

Version 1.6.2 - I changed FileHelper.CreateFileNameWithPartialGuid method, to have an optional parameter to return the fileName only. 

Version 1.6.1 - I realized my method FileHelper.CreateFileNameWithPartialGuid had a hard coded number of
characters (bad enough) but also had .png extension hard coded. I am guilty of a specific use method here, sorry.
It did work for .png's I tested.

Version 1.6.0 - I removed SQLParameterHelper, which had a dependency on System.Data.SQLClient.
I moved SQLParameterHelper to its own project DataJuggler.UltimateHelper.SQL
I also added another override for the CheckInRange and the EnsureInRange to NumericHelper, where
you can now pass in a list of integers, doubles or decimals to work with sets of numbers.

Version 1.5.12 - I added a new method IsInRange to NumericHelper.

Version 1.5.11 - I added a new method EnsureInRange to NumericHelper.

Version 1.5.8 - I added a couple of methods to DateHelper to get the month names and GetDateShortText

Version 1.5.7 - Oops. I forgot to make the new ExportTextLines static.

Version 1.5.6 - I did two things. One I got rid of WordParser, even though it breaks many of my own apps.
TextHelper has the exact two methods for GetTextLines and GetWords.
The other thing I added was a new method called ExportTextLines, to make it easy to reassemble a List of
TextLines back into a File or block.

Version 1.5.5 - I had been working on a method in the Word Parser, and I had to make a change to parse some text that didn't end in new line characters. I fixed and checked it right back in, so hopefully
no one downloaded this package in the last 5 minutes.

Version 1.5.4 - Remove the code that create the symbols package, as someone updated the project with 
it and I didn't ask for it and it didn't work to allow you to step through the code.

Download the code from Git Hub if you need to debug.

Version 1.5.3 - I am trying to be somewhat consistent, and the 5 stand for .Net 5.

Version 1.5.1 - I am trying to be somewhat consistent, and the 5 stand for .Net 5.

Version 1.3.1 - I realized I had forgotten to drop the .Core.

The new namespace is just DataJuggler.UltimateHelper (no .Net or .Core Yay!).

Version 1.5.3 - Brought over EnumHelper from .Net Framework version now that I am converting DB Compare
to .Net 5, I needed this.

Version 1.5.0 - .Net 5 Port.

Version 1.3.0 - Converted to .Net 5.0 and dropped the .Core name.

Version 1.2.6 - Not sure if a publish was needed for this, but the project file now has Source Link enabled, so source stepping should be possible.

Version 1.2.5 - I changed NumericHelper.IsNumeric to include 3 new optional parameters.
bool RemoveDash, true by default. - numbers are removed for this test.
double defaultValue, -2,000,000 default value.
double errorValue, -2,000,001 default value.

If the number parses to greater than, it is numeric.
My old way didn't work for negative numbers, and I need them now.

Version 1.2.4 - I added a 5th parameter override to NullHelper.Exists and NullHelper.IsNull

Version 1.2.3 - I accidently had LastIndexOf instead of Index of when I created a new file name in CreateFileNameWithPartialGuid method.

Version 1.2.2 - I added a new method to FileHelper, CreateFileName with PartialGuid.

Version 1.2.1
I brought over WordParser.cs.

Version 1.2.0 This is my first attempt at Multi-Targeting so this application is availaable to .Net Core 3.1 and .Net Standard 2.1.

</PackageReleaseNotes>
    <AssemblyVersion>1.6.8.0</AssemblyVersion>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>False</IncludeSymbols>
    <FileVersion>1.6.8.0</FileVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net6.0|AnyCPU'">
    <WarningLevel>5</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net6.0|AnyCPU'">
    <WarningLevel>5</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup>
    <None Include="LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Delegates\" />
  </ItemGroup>

</Project>
